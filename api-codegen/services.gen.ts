// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from '@hey-api/client-axios';
import type { SearchMovieData, SearchMovieError, SearchMovieResponse, DiscoverMovieData, DiscoverMovieError, DiscoverMovieResponse, MovieDetailsData, MovieDetailsError, MovieDetailsResponse, TvSeriesDetailsData, TvSeriesDetailsError, TvSeriesDetailsResponse, SearchTvData, SearchTvError, SearchTvResponse, SearchMultiData, SearchMultiError, SearchMultiResponse, SearchPersonData, SearchPersonError, SearchPersonResponse, ConfigurationDetailsError, ConfigurationDetailsResponse, TvSeasonDetailsData, TvSeasonDetailsError, TvSeasonDetailsResponse, TvEpisodeDetailsData, TvEpisodeDetailsError, TvEpisodeDetailsResponse, DiscoverTvData, DiscoverTvError, DiscoverTvResponse, MovieImagesData, MovieImagesError, MovieImagesResponse, TvSeriesImagesData, TvSeriesImagesError, TvSeriesImagesResponse, TvSeasonImagesData, TvSeasonImagesError, TvSeasonImagesResponse, TvEpisodeImagesData, TvEpisodeImagesError, TvEpisodeImagesResponse, TrendingAllData, TrendingAllError, TrendingAllResponse, TrendingMoviesData, TrendingMoviesError, TrendingMoviesResponse, TrendingTvData, TrendingTvError, TrendingTvResponse, MovieAccountStatesData, MovieAccountStatesError, MovieAccountStatesResponse, TvSeriesAccountStatesData, TvSeriesAccountStatesError, TvSeriesAccountStatesResponse, TvEpisodeAccountStatesData, TvEpisodeAccountStatesError, TvEpisodeAccountStatesResponse, TrendingPeopleData, TrendingPeopleError, TrendingPeopleResponse, MovieAlternativeTitlesData, MovieAlternativeTitlesError, MovieAlternativeTitlesResponse, MovieChangesData, MovieChangesError, MovieChangesResponse, MovieCreditsData, MovieCreditsError, MovieCreditsResponse, MovieExternalIdsData, MovieExternalIdsError, MovieExternalIdsResponse, MovieKeywordsData, MovieKeywordsError, MovieKeywordsResponse, MovieListsData, MovieListsError, MovieListsResponse, MovieRecommendationsData, MovieRecommendationsError, MovieRecommendationsResponse, MovieReleaseDatesData, MovieReleaseDatesError, MovieReleaseDatesResponse, MovieReviewsData, MovieReviewsError, MovieReviewsResponse, MovieSimilarData, MovieSimilarError, MovieSimilarResponse, MovieTranslationsData, MovieTranslationsError, MovieTranslationsResponse, MovieVideosData, MovieVideosError, MovieVideosResponse, MovieWatchProvidersData, MovieWatchProvidersError, MovieWatchProvidersResponse, MovieAddRatingData, MovieAddRatingError, MovieAddRatingResponse, MovieDeleteRatingData, MovieDeleteRatingError, MovieDeleteRatingResponse, AuthenticationCreateGuestSessionError, AuthenticationCreateGuestSessionResponse, AuthenticationCreateRequestTokenError, AuthenticationCreateRequestTokenResponse, AuthenticationCreateSessionData, AuthenticationCreateSessionError, AuthenticationCreateSessionResponse, AuthenticationCreateSessionFromV4TokenData, AuthenticationCreateSessionFromV4TokenError, AuthenticationCreateSessionFromV4TokenResponse, AuthenticationDeleteSessionData, AuthenticationDeleteSessionError, AuthenticationDeleteSessionResponse, FindByIdData, FindByIdError, FindByIdResponse, PersonDetailsData, PersonDetailsError, PersonDetailsResponse, PersonChangesData, PersonChangesError, PersonChangesResponse, TvSeriesChangesData, TvSeriesChangesError, TvSeriesChangesResponse, PersonImagesData, PersonImagesError, PersonImagesResponse, PersonMovieCreditsData, PersonMovieCreditsError, PersonMovieCreditsResponse, PersonTvCreditsData, PersonTvCreditsError, PersonTvCreditsResponse, PersonCombinedCreditsData, PersonCombinedCreditsError, PersonCombinedCreditsResponse, PersonExternalIdsData, PersonExternalIdsError, PersonExternalIdsResponse, PersonTaggedImagesData, PersonTaggedImagesError, PersonTaggedImagesResponse, TranslationsData, TranslationsError, TranslationsResponse, PersonPopularListData, PersonPopularListError, PersonPopularListResponse, MoviePopularListData, MoviePopularListError, MoviePopularListResponse, MovieTopRatedListData, MovieTopRatedListError, MovieTopRatedListResponse, MovieUpcomingListData, MovieUpcomingListError, MovieUpcomingListResponse, MovieNowPlayingListData, MovieNowPlayingListError, MovieNowPlayingListResponse, TvSeriesAiringTodayListData, TvSeriesAiringTodayListError, TvSeriesAiringTodayListResponse, TvSeriesOnTheAirListData, TvSeriesOnTheAirListError, TvSeriesOnTheAirListResponse, TvSeriesPopularListData, TvSeriesPopularListError, TvSeriesPopularListResponse, TvSeriesTopRatedListData, TvSeriesTopRatedListError, TvSeriesTopRatedListResponse, MovieLatestIdError, MovieLatestIdResponse, TvSeriesLatestIdError, TvSeriesLatestIdResponse, TvSeriesAggregateCreditsData, TvSeriesAggregateCreditsError, TvSeriesAggregateCreditsResponse, TvSeriesAlternativeTitlesData, TvSeriesAlternativeTitlesError, TvSeriesAlternativeTitlesResponse, TvSeriesContentRatingsData, TvSeriesContentRatingsError, TvSeriesContentRatingsResponse, TvSeriesCreditsData, TvSeriesCreditsError, TvSeriesCreditsResponse, TvSeriesEpisodeGroupsData, TvSeriesEpisodeGroupsError, TvSeriesEpisodeGroupsResponse, TvSeriesExternalIdsData, TvSeriesExternalIdsError, TvSeriesExternalIdsResponse, TvSeriesKeywordsData, TvSeriesKeywordsError, TvSeriesKeywordsResponse, TvSeriesRecommendationsData, TvSeriesRecommendationsError, TvSeriesRecommendationsResponse, TvSeriesReviewsData, TvSeriesReviewsError, TvSeriesReviewsResponse, TvSeriesScreenedTheatricallyData, TvSeriesScreenedTheatricallyError, TvSeriesScreenedTheatricallyResponse, TvSeriesSimilarData, TvSeriesSimilarError, TvSeriesSimilarResponse, TvSeriesTranslationsData, TvSeriesTranslationsError, TvSeriesTranslationsResponse, TvSeriesVideosData, TvSeriesVideosError, TvSeriesVideosResponse, TvSeriesWatchProvidersData, TvSeriesWatchProvidersError, TvSeriesWatchProvidersResponse, TvSeriesAddRatingData, TvSeriesAddRatingError, TvSeriesAddRatingResponse, TvSeriesDeleteRatingData, TvSeriesDeleteRatingError, TvSeriesDeleteRatingResponse, TvSeasonAccountStatesData, TvSeasonAccountStatesError, TvSeasonAccountStatesResponse, TvSeasonAggregateCreditsData, TvSeasonAggregateCreditsError, TvSeasonAggregateCreditsResponse, TvSeasonChangesByIdData, TvSeasonChangesByIdError, TvSeasonChangesByIdResponse, TvSeasonCreditsData, TvSeasonCreditsError, TvSeasonCreditsResponse, TvSeasonExternalIdsData, TvSeasonExternalIdsError, TvSeasonExternalIdsResponse, TvSeasonTranslationsData, TvSeasonTranslationsError, TvSeasonTranslationsResponse, TvSeasonVideosData, TvSeasonVideosError, TvSeasonVideosResponse, TvEpisodeCreditsData, TvEpisodeCreditsError, TvEpisodeCreditsResponse, TvEpisodeExternalIdsData, TvEpisodeExternalIdsError, TvEpisodeExternalIdsResponse, TvEpisodeTranslationsData, TvEpisodeTranslationsError, TvEpisodeTranslationsResponse, TvEpisodeVideosData, TvEpisodeVideosError, TvEpisodeVideosResponse, TvEpisodeAddRatingData, TvEpisodeAddRatingError, TvEpisodeAddRatingResponse, TvEpisodeDeleteRatingData, TvEpisodeDeleteRatingError, TvEpisodeDeleteRatingResponse, AccountDetailsData, AccountDetailsError, AccountDetailsResponse, AccountListsData, AccountListsError, AccountListsResponse, AccountGetFavoritesData, AccountGetFavoritesError, AccountGetFavoritesResponse, AccountFavoriteTvData, AccountFavoriteTvError, AccountFavoriteTvResponse, AccountRatedMoviesData, AccountRatedMoviesError, AccountRatedMoviesResponse, AccountRatedTvData, AccountRatedTvError, AccountRatedTvResponse, AccountRatedTvEpisodesData, AccountRatedTvEpisodesError, AccountRatedTvEpisodesResponse, AccountWatchlistMoviesData, AccountWatchlistMoviesError, AccountWatchlistMoviesResponse, AccountWatchlistTvData, AccountWatchlistTvError, AccountWatchlistTvResponse, AccountAddFavoriteData, AccountAddFavoriteError, AccountAddFavoriteResponse, AccountAddToWatchlistData, AccountAddToWatchlistError, AccountAddToWatchlistResponse, CertificationMovieListError, CertificationMovieListResponse, CertificationsTvListError, CertificationsTvListResponse, ChangesMovieListData, ChangesMovieListError, ChangesMovieListResponse, ChangesTvListData, ChangesTvListError, ChangesTvListResponse, ChangesPeopleListData, ChangesPeopleListError, ChangesPeopleListResponse, CollectionDetailsData, CollectionDetailsError, CollectionDetailsResponse, CollectionImagesData, CollectionImagesError, CollectionImagesResponse, CollectionTranslationsData, CollectionTranslationsError, CollectionTranslationsResponse, CompanyDetailsData, CompanyDetailsError, CompanyDetailsResponse, CompanyAlternativeNamesData, CompanyAlternativeNamesError, CompanyAlternativeNamesResponse, CompanyImagesData, CompanyImagesError, CompanyImagesResponse, CreditDetailsData, CreditDetailsError, CreditDetailsResponse, GenreMovieListData, GenreMovieListError, GenreMovieListResponse, GenreTvListData, GenreTvListError, GenreTvListResponse, GuestSessionRatedMoviesData, GuestSessionRatedMoviesError, GuestSessionRatedMoviesResponse, GuestSessionRatedTvData, GuestSessionRatedTvError, GuestSessionRatedTvResponse, GuestSessionRatedTvEpisodesData, GuestSessionRatedTvEpisodesError, GuestSessionRatedTvEpisodesResponse, WatchProvidersAvailableRegionsData, WatchProvidersAvailableRegionsError, WatchProvidersAvailableRegionsResponse, WatchProvidersMovieListData, WatchProvidersMovieListError, WatchProvidersMovieListResponse, WatchProviderTvListData, WatchProviderTvListError, WatchProviderTvListResponse, KeywordDetailsData, KeywordDetailsError, KeywordDetailsResponse, KeywordMoviesData, KeywordMoviesError, KeywordMoviesResponse, ListDetailsData, ListDetailsError, ListDetailsResponse, ListDeleteData, ListDeleteError, ListDeleteResponse, ListCheckItemStatusData, ListCheckItemStatusError, ListCheckItemStatusResponse, ListCreateData, ListCreateError, ListCreateResponse, ListAddMovieData, ListAddMovieError, ListAddMovieResponse, ListRemoveMovieData, ListRemoveMovieError, ListRemoveMovieResponse, ListClearData, ListClearError, ListClearResponse, NetworkDetailsData, NetworkDetailsError, NetworkDetailsResponse, DetailsCopyData, DetailsCopyError, DetailsCopyResponse, AlternativeNamesCopyData, AlternativeNamesCopyError, AlternativeNamesCopyResponse, ReviewDetailsData, ReviewDetailsError, ReviewDetailsResponse, AuthenticationValidateKeyError, AuthenticationValidateKeyResponse, TvSeasonWatchProvidersData, TvSeasonWatchProvidersError, TvSeasonWatchProvidersResponse, ConfigurationCountriesData, ConfigurationCountriesError, ConfigurationCountriesResponse, ConfigurationJobsError, ConfigurationJobsResponse, ConfigurationLanguagesError, ConfigurationLanguagesResponse, ConfigurationPrimaryTranslationsError, ConfigurationPrimaryTranslationsResponse, ConfigurationTimezonesError, ConfigurationTimezonesResponse, AuthenticationCreateSessionFromLoginData, AuthenticationCreateSessionFromLoginError, AuthenticationCreateSessionFromLoginResponse, PersonLatestIdError, PersonLatestIdResponse, TvEpisodeChangesByIdData, TvEpisodeChangesByIdError, TvEpisodeChangesByIdResponse, TvEpisodeGroupDetailsData, TvEpisodeGroupDetailsError, TvEpisodeGroupDetailsResponse, SearchCompanyData, SearchCompanyError, SearchCompanyResponse, SearchCollectionData, SearchCollectionError, SearchCollectionResponse, SearchKeywordData, SearchKeywordError, SearchKeywordResponse, ListsCopyData, ListsCopyError, ListsCopyResponse } from './types.gen';

/**
 * Movie
 * Search for movies by their original, translated and alternative titles.
 */
export const searchMovie = (options: Options<SearchMovieData>) => { return (options?.client ?? client).get<SearchMovieResponse, SearchMovieError>({
    ...options,
    url: '/3/search/movie'
}); };

/**
 * Movie
 * Find movies using over 30 filters and sort options.
 */
export const discoverMovie = (options?: Options<DiscoverMovieData>) => { return (options?.client ?? client).get<DiscoverMovieResponse, DiscoverMovieError>({
    ...options,
    url: '/3/discover/movie'
}); };

/**
 * Details
 * Get the top level details of a movie by ID.
 */
export const movieDetails = (options: Options<MovieDetailsData>) => { return (options?.client ?? client).get<MovieDetailsResponse, MovieDetailsError>({
    ...options,
    url: '/3/movie/{movie_id}'
}); };

/**
 * Details
 * Get the details of a TV show.
 */
export const tvSeriesDetails = (options: Options<TvSeriesDetailsData>) => { return (options?.client ?? client).get<TvSeriesDetailsResponse, TvSeriesDetailsError>({
    ...options,
    url: '/3/tv/{series_id}'
}); };

/**
 * TV
 * Search for TV shows by their original, translated and also known as names.
 */
export const searchTv = (options: Options<SearchTvData>) => { return (options?.client ?? client).get<SearchTvResponse, SearchTvError>({
    ...options,
    url: '/3/search/tv'
}); };

/**
 * Multi
 * Use multi search when you want to search for movies, TV shows and people in a single request.
 */
export const searchMulti = (options: Options<SearchMultiData>) => { return (options?.client ?? client).get<SearchMultiResponse, SearchMultiError>({
    ...options,
    url: '/3/search/multi'
}); };

/**
 * Person
 * Search for people by their name and also known as names.
 */
export const searchPerson = (options: Options<SearchPersonData>) => { return (options?.client ?? client).get<SearchPersonResponse, SearchPersonError>({
    ...options,
    url: '/3/search/person'
}); };

/**
 * Details
 * Query the API configuration details.
 */
export const configurationDetails = (options?: Options) => { return (options?.client ?? client).get<ConfigurationDetailsResponse, ConfigurationDetailsError>({
    ...options,
    url: '/3/configuration'
}); };

/**
 * Details
 * Query the details of a TV season.
 */
export const tvSeasonDetails = (options: Options<TvSeasonDetailsData>) => { return (options?.client ?? client).get<TvSeasonDetailsResponse, TvSeasonDetailsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}'
}); };

/**
 * Details
 * Query the details of a TV episode.
 */
export const tvEpisodeDetails = (options: Options<TvEpisodeDetailsData>) => { return (options?.client ?? client).get<TvEpisodeDetailsResponse, TvEpisodeDetailsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}'
}); };

/**
 * TV
 * Find TV shows using over 30 filters and sort options.
 */
export const discoverTv = (options?: Options<DiscoverTvData>) => { return (options?.client ?? client).get<DiscoverTvResponse, DiscoverTvError>({
    ...options,
    url: '/3/discover/tv'
}); };

/**
 * Images
 * Get the images that belong to a movie.
 */
export const movieImages = (options: Options<MovieImagesData>) => { return (options?.client ?? client).get<MovieImagesResponse, MovieImagesError>({
    ...options,
    url: '/3/movie/{movie_id}/images'
}); };

/**
 * Images
 * Get the images that belong to a TV series.
 */
export const tvSeriesImages = (options: Options<TvSeriesImagesData>) => { return (options?.client ?? client).get<TvSeriesImagesResponse, TvSeriesImagesError>({
    ...options,
    url: '/3/tv/{series_id}/images'
}); };

/**
 * Images
 * Get the images that belong to a TV season.
 */
export const tvSeasonImages = (options: Options<TvSeasonImagesData>) => { return (options?.client ?? client).get<TvSeasonImagesResponse, TvSeasonImagesError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/images'
}); };

/**
 * Images
 * Get the images that belong to a TV episode.
 */
export const tvEpisodeImages = (options: Options<TvEpisodeImagesData>) => { return (options?.client ?? client).get<TvEpisodeImagesResponse, TvEpisodeImagesError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/images'
}); };

/**
 * All
 * Get the trending movies, TV shows and people.
 */
export const trendingAll = (options: Options<TrendingAllData>) => { return (options?.client ?? client).get<TrendingAllResponse, TrendingAllError>({
    ...options,
    url: '/3/trending/all/{time_window}'
}); };

/**
 * Movies
 * Get the trending movies on TMDB.
 */
export const trendingMovies = (options: Options<TrendingMoviesData>) => { return (options?.client ?? client).get<TrendingMoviesResponse, TrendingMoviesError>({
    ...options,
    url: '/3/trending/movie/{time_window}'
}); };

/**
 * TV
 * Get the trending TV shows on TMDB.
 */
export const trendingTv = (options: Options<TrendingTvData>) => { return (options?.client ?? client).get<TrendingTvResponse, TrendingTvError>({
    ...options,
    url: '/3/trending/tv/{time_window}'
}); };

/**
 * Account States
 * Get the rating, watchlist and favourite status of an account.
 */
export const movieAccountStates = (options: Options<MovieAccountStatesData>) => { return (options?.client ?? client).get<MovieAccountStatesResponse, MovieAccountStatesError>({
    ...options,
    url: '/3/movie/{movie_id}/account_states'
}); };

/**
 * Account States
 * Get the rating, watchlist and favourite status.
 */
export const tvSeriesAccountStates = (options: Options<TvSeriesAccountStatesData>) => { return (options?.client ?? client).get<TvSeriesAccountStatesResponse, TvSeriesAccountStatesError>({
    ...options,
    url: '/3/tv/{series_id}/account_states'
}); };

/**
 * Account States
 * Get the rating, watchlist and favourite status.
 */
export const tvEpisodeAccountStates = (options: Options<TvEpisodeAccountStatesData>) => { return (options?.client ?? client).get<TvEpisodeAccountStatesResponse, TvEpisodeAccountStatesError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/account_states'
}); };

/**
 * People
 * Get the trending people on TMDB.
 */
export const trendingPeople = (options: Options<TrendingPeopleData>) => { return (options?.client ?? client).get<TrendingPeopleResponse, TrendingPeopleError>({
    ...options,
    url: '/3/trending/person/{time_window}'
}); };

/**
 * Alternative Titles
 * Get the alternative titles for a movie.
 */
export const movieAlternativeTitles = (options: Options<MovieAlternativeTitlesData>) => { return (options?.client ?? client).get<MovieAlternativeTitlesResponse, MovieAlternativeTitlesError>({
    ...options,
    url: '/3/movie/{movie_id}/alternative_titles'
}); };

/**
 * Changes
 * Get the recent changes for a movie.
 */
export const movieChanges = (options: Options<MovieChangesData>) => { return (options?.client ?? client).get<MovieChangesResponse, MovieChangesError>({
    ...options,
    url: '/3/movie/{movie_id}/changes'
}); };

/**
 * Credits
 */
export const movieCredits = (options: Options<MovieCreditsData>) => { return (options?.client ?? client).get<MovieCreditsResponse, MovieCreditsError>({
    ...options,
    url: '/3/movie/{movie_id}/credits'
}); };

/**
 * External IDs
 */
export const movieExternalIds = (options: Options<MovieExternalIdsData>) => { return (options?.client ?? client).get<MovieExternalIdsResponse, MovieExternalIdsError>({
    ...options,
    url: '/3/movie/{movie_id}/external_ids'
}); };

/**
 * Keywords
 */
export const movieKeywords = (options: Options<MovieKeywordsData>) => { return (options?.client ?? client).get<MovieKeywordsResponse, MovieKeywordsError>({
    ...options,
    url: '/3/movie/{movie_id}/keywords'
}); };

/**
 * Lists
 * Get the lists that a movie has been added to.
 */
export const movieLists = (options: Options<MovieListsData>) => { return (options?.client ?? client).get<MovieListsResponse, MovieListsError>({
    ...options,
    url: '/3/movie/{movie_id}/lists'
}); };

/**
 * Recommendations
 */
export const movieRecommendations = (options: Options<MovieRecommendationsData>) => { return (options?.client ?? client).get<MovieRecommendationsResponse, MovieRecommendationsError>({
    ...options,
    url: '/3/movie/{movie_id}/recommendations'
}); };

/**
 * Release Dates
 * Get the release dates and certifications for a movie.
 */
export const movieReleaseDates = (options: Options<MovieReleaseDatesData>) => { return (options?.client ?? client).get<MovieReleaseDatesResponse, MovieReleaseDatesError>({
    ...options,
    url: '/3/movie/{movie_id}/release_dates'
}); };

/**
 * Reviews
 * Get the user reviews for a movie.
 */
export const movieReviews = (options: Options<MovieReviewsData>) => { return (options?.client ?? client).get<MovieReviewsResponse, MovieReviewsError>({
    ...options,
    url: '/3/movie/{movie_id}/reviews'
}); };

/**
 * Similar
 * Get the similar movies based on genres and keywords.
 */
export const movieSimilar = (options: Options<MovieSimilarData>) => { return (options?.client ?? client).get<MovieSimilarResponse, MovieSimilarError>({
    ...options,
    url: '/3/movie/{movie_id}/similar'
}); };

/**
 * Translations
 * Get the translations for a movie.
 */
export const movieTranslations = (options: Options<MovieTranslationsData>) => { return (options?.client ?? client).get<MovieTranslationsResponse, MovieTranslationsError>({
    ...options,
    url: '/3/movie/{movie_id}/translations'
}); };

/**
 * Videos
 */
export const movieVideos = (options: Options<MovieVideosData>) => { return (options?.client ?? client).get<MovieVideosResponse, MovieVideosError>({
    ...options,
    url: '/3/movie/{movie_id}/videos'
}); };

/**
 * Watch Providers
 * Get the list of streaming providers we have for a movie.
 */
export const movieWatchProviders = (options: Options<MovieWatchProvidersData>) => { return (options?.client ?? client).get<MovieWatchProvidersResponse, MovieWatchProvidersError>({
    ...options,
    url: '/3/movie/{movie_id}/watch/providers'
}); };

/**
 * Add Rating
 * Rate a movie and save it to your rated list.
 */
export const movieAddRating = (options: Options<MovieAddRatingData>) => { return (options?.client ?? client).post<MovieAddRatingResponse, MovieAddRatingError>({
    ...options,
    url: '/3/movie/{movie_id}/rating'
}); };

/**
 * Delete Rating
 * Delete a user rating.
 */
export const movieDeleteRating = (options: Options<MovieDeleteRatingData>) => { return (options?.client ?? client).delete<MovieDeleteRatingResponse, MovieDeleteRatingError>({
    ...options,
    url: '/3/movie/{movie_id}/rating'
}); };

/**
 * Create Guest Session
 */
export const authenticationCreateGuestSession = (options?: Options) => { return (options?.client ?? client).get<AuthenticationCreateGuestSessionResponse, AuthenticationCreateGuestSessionError>({
    ...options,
    url: '/3/authentication/guest_session/new'
}); };

/**
 * Create Request Token
 */
export const authenticationCreateRequestToken = (options?: Options) => { return (options?.client ?? client).get<AuthenticationCreateRequestTokenResponse, AuthenticationCreateRequestTokenError>({
    ...options,
    url: '/3/authentication/token/new'
}); };

/**
 * Create Session
 */
export const authenticationCreateSession = (options?: Options<AuthenticationCreateSessionData>) => { return (options?.client ?? client).post<AuthenticationCreateSessionResponse, AuthenticationCreateSessionError>({
    ...options,
    url: '/3/authentication/session/new'
}); };

/**
 * Create Session (from v4 token)
 */
export const authenticationCreateSessionFromV4Token = (options?: Options<AuthenticationCreateSessionFromV4TokenData>) => { return (options?.client ?? client).post<AuthenticationCreateSessionFromV4TokenResponse, AuthenticationCreateSessionFromV4TokenError>({
    ...options,
    url: '/3/authentication/session/convert/4'
}); };

/**
 * Delete Session
 */
export const authenticationDeleteSession = (options?: Options<AuthenticationDeleteSessionData>) => { return (options?.client ?? client).delete<AuthenticationDeleteSessionResponse, AuthenticationDeleteSessionError>({
    ...options,
    url: '/3/authentication/session'
}); };

/**
 * Find By ID
 * Find data by external ID's.
 */
export const findById = (options: Options<FindByIdData>) => { return (options?.client ?? client).get<FindByIdResponse, FindByIdError>({
    ...options,
    url: '/3/find/{external_id}'
}); };

/**
 * Details
 * Query the top level details of a person.
 */
export const personDetails = (options: Options<PersonDetailsData>) => { return (options?.client ?? client).get<PersonDetailsResponse, PersonDetailsError>({
    ...options,
    url: '/3/person/{person_id}'
}); };

/**
 * Changes
 * Get the recent changes for a person.
 */
export const personChanges = (options: Options<PersonChangesData>) => { return (options?.client ?? client).get<PersonChangesResponse, PersonChangesError>({
    ...options,
    url: '/3/person/{person_id}/changes'
}); };

/**
 * Changes
 * Get the recent changes for a TV show.
 */
export const tvSeriesChanges = (options: Options<TvSeriesChangesData>) => { return (options?.client ?? client).get<TvSeriesChangesResponse, TvSeriesChangesError>({
    ...options,
    url: '/3/tv/{series_id}/changes'
}); };

/**
 * Images
 * Get the profile images that belong to a person.
 */
export const personImages = (options: Options<PersonImagesData>) => { return (options?.client ?? client).get<PersonImagesResponse, PersonImagesError>({
    ...options,
    url: '/3/person/{person_id}/images'
}); };

/**
 * Movie Credits
 * Get the movie credits for a person.
 */
export const personMovieCredits = (options: Options<PersonMovieCreditsData>) => { return (options?.client ?? client).get<PersonMovieCreditsResponse, PersonMovieCreditsError>({
    ...options,
    url: '/3/person/{person_id}/movie_credits'
}); };

/**
 * TV Credits
 * Get the TV credits that belong to a person.
 */
export const personTvCredits = (options: Options<PersonTvCreditsData>) => { return (options?.client ?? client).get<PersonTvCreditsResponse, PersonTvCreditsError>({
    ...options,
    url: '/3/person/{person_id}/tv_credits'
}); };

/**
 * Combined Credits
 * Get the combined movie and TV credits that belong to a person.
 */
export const personCombinedCredits = (options: Options<PersonCombinedCreditsData>) => { return (options?.client ?? client).get<PersonCombinedCreditsResponse, PersonCombinedCreditsError>({
    ...options,
    url: '/3/person/{person_id}/combined_credits'
}); };

/**
 * External IDs
 * Get the external ID's that belong to a person.
 */
export const personExternalIds = (options: Options<PersonExternalIdsData>) => { return (options?.client ?? client).get<PersonExternalIdsResponse, PersonExternalIdsError>({
    ...options,
    url: '/3/person/{person_id}/external_ids'
}); };

/**
 * Tagged Images
 * Get the tagged images for a person.
 */
export const personTaggedImages = (options: Options<PersonTaggedImagesData>) => { return (options?.client ?? client).get<PersonTaggedImagesResponse, PersonTaggedImagesError>({
    ...options,
    url: '/3/person/{person_id}/tagged_images'
}); };

/**
 * Translations
 * Get the translations that belong to a person.
 */
export const translations = (options: Options<TranslationsData>) => { return (options?.client ?? client).get<TranslationsResponse, TranslationsError>({
    ...options,
    url: '/3/person/{person_id}/translations'
}); };

/**
 * Popular
 * Get a list of people ordered by popularity.
 */
export const personPopularList = (options?: Options<PersonPopularListData>) => { return (options?.client ?? client).get<PersonPopularListResponse, PersonPopularListError>({
    ...options,
    url: '/3/person/popular'
}); };

/**
 * Popular
 * Get a list of movies ordered by popularity.
 */
export const moviePopularList = (options?: Options<MoviePopularListData>) => { return (options?.client ?? client).get<MoviePopularListResponse, MoviePopularListError>({
    ...options,
    url: '/3/movie/popular'
}); };

/**
 * Top Rated
 * Get a list of movies ordered by rating.
 */
export const movieTopRatedList = (options?: Options<MovieTopRatedListData>) => { return (options?.client ?? client).get<MovieTopRatedListResponse, MovieTopRatedListError>({
    ...options,
    url: '/3/movie/top_rated'
}); };

/**
 * Upcoming
 * Get a list of movies that are being released soon.
 */
export const movieUpcomingList = (options?: Options<MovieUpcomingListData>) => { return (options?.client ?? client).get<MovieUpcomingListResponse, MovieUpcomingListError>({
    ...options,
    url: '/3/movie/upcoming'
}); };

/**
 * Now Playing
 * Get a list of movies that are currently in theatres.
 */
export const movieNowPlayingList = (options?: Options<MovieNowPlayingListData>) => { return (options?.client ?? client).get<MovieNowPlayingListResponse, MovieNowPlayingListError>({
    ...options,
    url: '/3/movie/now_playing'
}); };

/**
 * Airing Today
 * Get a list of TV shows airing today.
 */
export const tvSeriesAiringTodayList = (options?: Options<TvSeriesAiringTodayListData>) => { return (options?.client ?? client).get<TvSeriesAiringTodayListResponse, TvSeriesAiringTodayListError>({
    ...options,
    url: '/3/tv/airing_today'
}); };

/**
 * On The Air
 * Get a list of TV shows that air in the next 7 days.
 */
export const tvSeriesOnTheAirList = (options?: Options<TvSeriesOnTheAirListData>) => { return (options?.client ?? client).get<TvSeriesOnTheAirListResponse, TvSeriesOnTheAirListError>({
    ...options,
    url: '/3/tv/on_the_air'
}); };

/**
 * Popular
 * Get a list of TV shows ordered by popularity.
 */
export const tvSeriesPopularList = (options?: Options<TvSeriesPopularListData>) => { return (options?.client ?? client).get<TvSeriesPopularListResponse, TvSeriesPopularListError>({
    ...options,
    url: '/3/tv/popular'
}); };

/**
 * Top Rated
 * Get a list of TV shows ordered by rating.
 */
export const tvSeriesTopRatedList = (options?: Options<TvSeriesTopRatedListData>) => { return (options?.client ?? client).get<TvSeriesTopRatedListResponse, TvSeriesTopRatedListError>({
    ...options,
    url: '/3/tv/top_rated'
}); };

/**
 * Latest
 * Get the newest movie ID.
 */
export const movieLatestId = (options?: Options) => { return (options?.client ?? client).get<MovieLatestIdResponse, MovieLatestIdError>({
    ...options,
    url: '/3/movie/latest'
}); };

/**
 * Latest
 * Get the newest TV show ID.
 */
export const tvSeriesLatestId = (options?: Options) => { return (options?.client ?? client).get<TvSeriesLatestIdResponse, TvSeriesLatestIdError>({
    ...options,
    url: '/3/tv/latest'
}); };

/**
 * Aggregate Credits
 * Get the aggregate credits (cast and crew) that have been added to a TV show.
 */
export const tvSeriesAggregateCredits = (options: Options<TvSeriesAggregateCreditsData>) => { return (options?.client ?? client).get<TvSeriesAggregateCreditsResponse, TvSeriesAggregateCreditsError>({
    ...options,
    url: '/3/tv/{series_id}/aggregate_credits'
}); };

/**
 * Alternative Titles
 * Get the alternative titles that have been added to a TV show.
 */
export const tvSeriesAlternativeTitles = (options: Options<TvSeriesAlternativeTitlesData>) => { return (options?.client ?? client).get<TvSeriesAlternativeTitlesResponse, TvSeriesAlternativeTitlesError>({
    ...options,
    url: '/3/tv/{series_id}/alternative_titles'
}); };

/**
 * Content Ratings
 * Get the content ratings that have been added to a TV show.
 */
export const tvSeriesContentRatings = (options: Options<TvSeriesContentRatingsData>) => { return (options?.client ?? client).get<TvSeriesContentRatingsResponse, TvSeriesContentRatingsError>({
    ...options,
    url: '/3/tv/{series_id}/content_ratings'
}); };

/**
 * Credits
 * Get the latest season credits of a TV show.
 */
export const tvSeriesCredits = (options: Options<TvSeriesCreditsData>) => { return (options?.client ?? client).get<TvSeriesCreditsResponse, TvSeriesCreditsError>({
    ...options,
    url: '/3/tv/{series_id}/credits'
}); };

/**
 * Episode Groups
 * Get the episode groups that have been added to a TV show.
 */
export const tvSeriesEpisodeGroups = (options: Options<TvSeriesEpisodeGroupsData>) => { return (options?.client ?? client).get<TvSeriesEpisodeGroupsResponse, TvSeriesEpisodeGroupsError>({
    ...options,
    url: '/3/tv/{series_id}/episode_groups'
}); };

/**
 * External IDs
 * Get a list of external IDs that have been added to a TV show.
 */
export const tvSeriesExternalIds = (options: Options<TvSeriesExternalIdsData>) => { return (options?.client ?? client).get<TvSeriesExternalIdsResponse, TvSeriesExternalIdsError>({
    ...options,
    url: '/3/tv/{series_id}/external_ids'
}); };

/**
 * Keywords
 * Get a list of keywords that have been added to a TV show.
 */
export const tvSeriesKeywords = (options: Options<TvSeriesKeywordsData>) => { return (options?.client ?? client).get<TvSeriesKeywordsResponse, TvSeriesKeywordsError>({
    ...options,
    url: '/3/tv/{series_id}/keywords'
}); };

/**
 * Recommendations
 */
export const tvSeriesRecommendations = (options: Options<TvSeriesRecommendationsData>) => { return (options?.client ?? client).get<TvSeriesRecommendationsResponse, TvSeriesRecommendationsError>({
    ...options,
    url: '/3/tv/{series_id}/recommendations'
}); };

/**
 * Reviews
 * Get the reviews that have been added to a TV show.
 */
export const tvSeriesReviews = (options: Options<TvSeriesReviewsData>) => { return (options?.client ?? client).get<TvSeriesReviewsResponse, TvSeriesReviewsError>({
    ...options,
    url: '/3/tv/{series_id}/reviews'
}); };

/**
 * Screened Theatrically
 * Get the seasons and episodes that have screened theatrically.
 */
export const tvSeriesScreenedTheatrically = (options: Options<TvSeriesScreenedTheatricallyData>) => { return (options?.client ?? client).get<TvSeriesScreenedTheatricallyResponse, TvSeriesScreenedTheatricallyError>({
    ...options,
    url: '/3/tv/{series_id}/screened_theatrically'
}); };

/**
 * Similar
 * Get the similar TV shows.
 */
export const tvSeriesSimilar = (options: Options<TvSeriesSimilarData>) => { return (options?.client ?? client).get<TvSeriesSimilarResponse, TvSeriesSimilarError>({
    ...options,
    url: '/3/tv/{series_id}/similar'
}); };

/**
 * Translations
 * Get the translations that have been added to a TV show.
 */
export const tvSeriesTranslations = (options: Options<TvSeriesTranslationsData>) => { return (options?.client ?? client).get<TvSeriesTranslationsResponse, TvSeriesTranslationsError>({
    ...options,
    url: '/3/tv/{series_id}/translations'
}); };

/**
 * Videos
 * Get the videos that belong to a TV show.
 */
export const tvSeriesVideos = (options: Options<TvSeriesVideosData>) => { return (options?.client ?? client).get<TvSeriesVideosResponse, TvSeriesVideosError>({
    ...options,
    url: '/3/tv/{series_id}/videos'
}); };

/**
 * Watch Providers
 * Get the list of streaming providers we have for a TV show.
 */
export const tvSeriesWatchProviders = (options: Options<TvSeriesWatchProvidersData>) => { return (options?.client ?? client).get<TvSeriesWatchProvidersResponse, TvSeriesWatchProvidersError>({
    ...options,
    url: '/3/tv/{series_id}/watch/providers'
}); };

/**
 * Add Rating
 * Rate a TV show and save it to your rated list.
 */
export const tvSeriesAddRating = (options: Options<TvSeriesAddRatingData>) => { return (options?.client ?? client).post<TvSeriesAddRatingResponse, TvSeriesAddRatingError>({
    ...options,
    url: '/3/tv/{series_id}/rating'
}); };

/**
 * Delete Rating
 */
export const tvSeriesDeleteRating = (options: Options<TvSeriesDeleteRatingData>) => { return (options?.client ?? client).delete<TvSeriesDeleteRatingResponse, TvSeriesDeleteRatingError>({
    ...options,
    url: '/3/tv/{series_id}/rating'
}); };

/**
 * Account States
 * Get the rating, watchlist and favourite status.
 */
export const tvSeasonAccountStates = (options: Options<TvSeasonAccountStatesData>) => { return (options?.client ?? client).get<TvSeasonAccountStatesResponse, TvSeasonAccountStatesError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/account_states'
}); };

/**
 * Aggregate Credits
 * Get the aggregate credits (cast and crew) that have been added to a TV season.
 */
export const tvSeasonAggregateCredits = (options: Options<TvSeasonAggregateCreditsData>) => { return (options?.client ?? client).get<TvSeasonAggregateCreditsResponse, TvSeasonAggregateCreditsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/aggregate_credits'
}); };

/**
 * Changes
 * Get the recent changes for a TV season.
 */
export const tvSeasonChangesById = (options: Options<TvSeasonChangesByIdData>) => { return (options?.client ?? client).get<TvSeasonChangesByIdResponse, TvSeasonChangesByIdError>({
    ...options,
    url: '/3/tv/season/{season_id}/changes'
}); };

/**
 * Credits
 */
export const tvSeasonCredits = (options: Options<TvSeasonCreditsData>) => { return (options?.client ?? client).get<TvSeasonCreditsResponse, TvSeasonCreditsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/credits'
}); };

/**
 * External IDs
 * Get a list of external IDs that have been added to a TV season.
 */
export const tvSeasonExternalIds = (options: Options<TvSeasonExternalIdsData>) => { return (options?.client ?? client).get<TvSeasonExternalIdsResponse, TvSeasonExternalIdsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/external_ids'
}); };

/**
 * Translations
 * Get the translations for a TV season.
 */
export const tvSeasonTranslations = (options: Options<TvSeasonTranslationsData>) => { return (options?.client ?? client).get<TvSeasonTranslationsResponse, TvSeasonTranslationsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/translations'
}); };

/**
 * Videos
 * Get the videos that belong to a TV season.
 */
export const tvSeasonVideos = (options: Options<TvSeasonVideosData>) => { return (options?.client ?? client).get<TvSeasonVideosResponse, TvSeasonVideosError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/videos'
}); };

/**
 * Credits
 */
export const tvEpisodeCredits = (options: Options<TvEpisodeCreditsData>) => { return (options?.client ?? client).get<TvEpisodeCreditsResponse, TvEpisodeCreditsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/credits'
}); };

/**
 * External IDs
 * Get a list of external IDs that have been added to a TV episode.
 */
export const tvEpisodeExternalIds = (options: Options<TvEpisodeExternalIdsData>) => { return (options?.client ?? client).get<TvEpisodeExternalIdsResponse, TvEpisodeExternalIdsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/external_ids'
}); };

/**
 * Translations
 * Get the translations that have been added to a TV episode.
 */
export const tvEpisodeTranslations = (options: Options<TvEpisodeTranslationsData>) => { return (options?.client ?? client).get<TvEpisodeTranslationsResponse, TvEpisodeTranslationsError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/translations'
}); };

/**
 * Videos
 * Get the videos that belong to a TV episode.
 */
export const tvEpisodeVideos = (options: Options<TvEpisodeVideosData>) => { return (options?.client ?? client).get<TvEpisodeVideosResponse, TvEpisodeVideosError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/videos'
}); };

/**
 * Add Rating
 * Rate a TV episode and save it to your rated list.
 */
export const tvEpisodeAddRating = (options: Options<TvEpisodeAddRatingData>) => { return (options?.client ?? client).post<TvEpisodeAddRatingResponse, TvEpisodeAddRatingError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/rating'
}); };

/**
 * Delete Rating
 * Delete your rating on a TV episode.
 */
export const tvEpisodeDeleteRating = (options: Options<TvEpisodeDeleteRatingData>) => { return (options?.client ?? client).delete<TvEpisodeDeleteRatingResponse, TvEpisodeDeleteRatingError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/episode/{episode_number}/rating'
}); };

/**
 * Details
 */
export const accountDetails = (options: Options<AccountDetailsData>) => { return (options?.client ?? client).get<AccountDetailsResponse, AccountDetailsError>({
    ...options,
    url: '/3/account/{account_id}'
}); };

/**
 * Lists
 */
export const accountLists = (options: Options<AccountListsData>) => { return (options?.client ?? client).get<AccountListsResponse, AccountListsError>({
    ...options,
    url: '/3/account/{account_id}/lists'
}); };

/**
 * Favorite Movies
 */
export const accountGetFavorites = (options: Options<AccountGetFavoritesData>) => { return (options?.client ?? client).get<AccountGetFavoritesResponse, AccountGetFavoritesError>({
    ...options,
    url: '/3/account/{account_id}/favorite/movies'
}); };

/**
 * Favorite TV
 */
export const accountFavoriteTv = (options: Options<AccountFavoriteTvData>) => { return (options?.client ?? client).get<AccountFavoriteTvResponse, AccountFavoriteTvError>({
    ...options,
    url: '/3/account/{account_id}/favorite/tv'
}); };

/**
 * Rated Movies
 */
export const accountRatedMovies = (options: Options<AccountRatedMoviesData>) => { return (options?.client ?? client).get<AccountRatedMoviesResponse, AccountRatedMoviesError>({
    ...options,
    url: '/3/account/{account_id}/rated/movies'
}); };

/**
 * Rated TV
 */
export const accountRatedTv = (options: Options<AccountRatedTvData>) => { return (options?.client ?? client).get<AccountRatedTvResponse, AccountRatedTvError>({
    ...options,
    url: '/3/account/{account_id}/rated/tv'
}); };

/**
 * Rated TV Episodes
 */
export const accountRatedTvEpisodes = (options: Options<AccountRatedTvEpisodesData>) => { return (options?.client ?? client).get<AccountRatedTvEpisodesResponse, AccountRatedTvEpisodesError>({
    ...options,
    url: '/3/account/{account_id}/rated/tv/episodes'
}); };

/**
 * Watchlist Movies
 */
export const accountWatchlistMovies = (options: Options<AccountWatchlistMoviesData>) => { return (options?.client ?? client).get<AccountWatchlistMoviesResponse, AccountWatchlistMoviesError>({
    ...options,
    url: '/3/account/{account_id}/watchlist/movies'
}); };

/**
 * Watchlist TV
 */
export const accountWatchlistTv = (options: Options<AccountWatchlistTvData>) => { return (options?.client ?? client).get<AccountWatchlistTvResponse, AccountWatchlistTvError>({
    ...options,
    url: '/3/account/{account_id}/watchlist/tv'
}); };

/**
 * Add Favorite
 */
export const accountAddFavorite = (options: Options<AccountAddFavoriteData>) => { return (options?.client ?? client).post<AccountAddFavoriteResponse, AccountAddFavoriteError>({
    ...options,
    url: '/3/account/{account_id}/favorite'
}); };

/**
 * Add To Watchlist
 */
export const accountAddToWatchlist = (options: Options<AccountAddToWatchlistData>) => { return (options?.client ?? client).post<AccountAddToWatchlistResponse, AccountAddToWatchlistError>({
    ...options,
    url: '/3/account/{account_id}/watchlist'
}); };

/**
 * Movie Certifications
 * Get an up to date list of the officially supported movie certifications on TMDB.
 */
export const certificationMovieList = (options?: Options) => { return (options?.client ?? client).get<CertificationMovieListResponse, CertificationMovieListError>({
    ...options,
    url: '/3/certification/movie/list'
}); };

/**
 * TV Certifications
 */
export const certificationsTvList = (options?: Options) => { return (options?.client ?? client).get<CertificationsTvListResponse, CertificationsTvListError>({
    ...options,
    url: '/3/certification/tv/list'
}); };

/**
 * Movie List
 * Get a list of all of the movie ids that have been changed in the past 24 hours.
 */
export const changesMovieList = (options?: Options<ChangesMovieListData>) => { return (options?.client ?? client).get<ChangesMovieListResponse, ChangesMovieListError>({
    ...options,
    url: '/3/movie/changes'
}); };

/**
 * TV List
 */
export const changesTvList = (options?: Options<ChangesTvListData>) => { return (options?.client ?? client).get<ChangesTvListResponse, ChangesTvListError>({
    ...options,
    url: '/3/tv/changes'
}); };

/**
 * People List
 */
export const changesPeopleList = (options?: Options<ChangesPeopleListData>) => { return (options?.client ?? client).get<ChangesPeopleListResponse, ChangesPeopleListError>({
    ...options,
    url: '/3/person/changes'
}); };

/**
 * Details
 * Get collection details by ID.
 */
export const collectionDetails = (options: Options<CollectionDetailsData>) => { return (options?.client ?? client).get<CollectionDetailsResponse, CollectionDetailsError>({
    ...options,
    url: '/3/collection/{collection_id}'
}); };

/**
 * Images
 * Get the images that belong to a collection.
 */
export const collectionImages = (options: Options<CollectionImagesData>) => { return (options?.client ?? client).get<CollectionImagesResponse, CollectionImagesError>({
    ...options,
    url: '/3/collection/{collection_id}/images'
}); };

/**
 * Translations
 */
export const collectionTranslations = (options: Options<CollectionTranslationsData>) => { return (options?.client ?? client).get<CollectionTranslationsResponse, CollectionTranslationsError>({
    ...options,
    url: '/3/collection/{collection_id}/translations'
}); };

/**
 * Details
 * Get the company details by ID.
 */
export const companyDetails = (options: Options<CompanyDetailsData>) => { return (options?.client ?? client).get<CompanyDetailsResponse, CompanyDetailsError>({
    ...options,
    url: '/3/company/{company_id}'
}); };

/**
 * Alternative Names
 * Get the company details by ID.
 */
export const companyAlternativeNames = (options: Options<CompanyAlternativeNamesData>) => { return (options?.client ?? client).get<CompanyAlternativeNamesResponse, CompanyAlternativeNamesError>({
    ...options,
    url: '/3/company/{company_id}/alternative_names'
}); };

/**
 * Images
 * Get the company logos by id.
 */
export const companyImages = (options: Options<CompanyImagesData>) => { return (options?.client ?? client).get<CompanyImagesResponse, CompanyImagesError>({
    ...options,
    url: '/3/company/{company_id}/images'
}); };

/**
 * Details
 * Get a movie or TV credit details by ID.
 */
export const creditDetails = (options: Options<CreditDetailsData>) => { return (options?.client ?? client).get<CreditDetailsResponse, CreditDetailsError>({
    ...options,
    url: '/3/credit/{credit_id}'
}); };

/**
 * Movie List
 * Get the list of official genres for movies.
 */
export const genreMovieList = (options?: Options<GenreMovieListData>) => { return (options?.client ?? client).get<GenreMovieListResponse, GenreMovieListError>({
    ...options,
    url: '/3/genre/movie/list'
}); };

/**
 * TV List
 * Get the list of official genres for TV shows.
 */
export const genreTvList = (options?: Options<GenreTvListData>) => { return (options?.client ?? client).get<GenreTvListResponse, GenreTvListError>({
    ...options,
    url: '/3/genre/tv/list'
}); };

/**
 * Rated Movies
 * Get the rated movies for a guest session.
 */
export const guestSessionRatedMovies = (options: Options<GuestSessionRatedMoviesData>) => { return (options?.client ?? client).get<GuestSessionRatedMoviesResponse, GuestSessionRatedMoviesError>({
    ...options,
    url: '/3/guest_session/{guest_session_id}/rated/movies'
}); };

/**
 * Rated TV
 * Get the rated TV shows for a guest session.
 */
export const guestSessionRatedTv = (options: Options<GuestSessionRatedTvData>) => { return (options?.client ?? client).get<GuestSessionRatedTvResponse, GuestSessionRatedTvError>({
    ...options,
    url: '/3/guest_session/{guest_session_id}/rated/tv'
}); };

/**
 * Rated TV Episodes
 * Get the rated TV episodes for a guest session.
 */
export const guestSessionRatedTvEpisodes = (options: Options<GuestSessionRatedTvEpisodesData>) => { return (options?.client ?? client).get<GuestSessionRatedTvEpisodesResponse, GuestSessionRatedTvEpisodesError>({
    ...options,
    url: '/3/guest_session/{guest_session_id}/rated/tv/episodes'
}); };

/**
 * Available Regions
 * Get the list of the countries we have watch provider (OTT/streaming) data for.
 */
export const watchProvidersAvailableRegions = (options?: Options<WatchProvidersAvailableRegionsData>) => { return (options?.client ?? client).get<WatchProvidersAvailableRegionsResponse, WatchProvidersAvailableRegionsError>({
    ...options,
    url: '/3/watch/providers/regions'
}); };

/**
 * Movie Providers
 * Get the list of streaming providers we have for movies.
 */
export const watchProvidersMovieList = (options?: Options<WatchProvidersMovieListData>) => { return (options?.client ?? client).get<WatchProvidersMovieListResponse, WatchProvidersMovieListError>({
    ...options,
    url: '/3/watch/providers/movie'
}); };

/**
 * TV Providers
 * Get the list of streaming providers we have for TV shows.
 */
export const watchProviderTvList = (options?: Options<WatchProviderTvListData>) => { return (options?.client ?? client).get<WatchProviderTvListResponse, WatchProviderTvListError>({
    ...options,
    url: '/3/watch/providers/tv'
}); };

/**
 * Details
 */
export const keywordDetails = (options: Options<KeywordDetailsData>) => { return (options?.client ?? client).get<KeywordDetailsResponse, KeywordDetailsError>({
    ...options,
    url: '/3/keyword/{keyword_id}'
}); };

/**
 * Movies
 */
export const keywordMovies = (options: Options<KeywordMoviesData>) => { return (options?.client ?? client).get<KeywordMoviesResponse, KeywordMoviesError>({
    ...options,
    url: '/3/keyword/{keyword_id}/movies'
}); };

/**
 * Details
 */
export const listDetails = (options: Options<ListDetailsData>) => { return (options?.client ?? client).get<ListDetailsResponse, ListDetailsError>({
    ...options,
    url: '/3/list/{list_id}'
}); };

/**
 * Delete
 * Delete a list.
 */
export const listDelete = (options: Options<ListDeleteData>) => { return (options?.client ?? client).delete<ListDeleteResponse, ListDeleteError>({
    ...options,
    url: '/3/list/{list_id}'
}); };

/**
 * Check Item Status
 * Use this method to check if an item has already been added to the list.
 */
export const listCheckItemStatus = (options: Options<ListCheckItemStatusData>) => { return (options?.client ?? client).get<ListCheckItemStatusResponse, ListCheckItemStatusError>({
    ...options,
    url: '/3/list/{list_id}/item_status'
}); };

/**
 * Create
 */
export const listCreate = (options: Options<ListCreateData>) => { return (options?.client ?? client).post<ListCreateResponse, ListCreateError>({
    ...options,
    url: '/3/list'
}); };

/**
 * Add Movie
 * Add a movie to a list.
 */
export const listAddMovie = (options: Options<ListAddMovieData>) => { return (options?.client ?? client).post<ListAddMovieResponse, ListAddMovieError>({
    ...options,
    url: '/3/list/{list_id}/add_item'
}); };

/**
 * Remove Movie
 * Remove a movie from a list.
 */
export const listRemoveMovie = (options: Options<ListRemoveMovieData>) => { return (options?.client ?? client).post<ListRemoveMovieResponse, ListRemoveMovieError>({
    ...options,
    url: '/3/list/{list_id}/remove_item'
}); };

/**
 * Clear
 * Clear all items from a list.
 */
export const listClear = (options: Options<ListClearData>) => { return (options?.client ?? client).post<ListClearResponse, ListClearError>({
    ...options,
    url: '/3/list/{list_id}/clear'
}); };

/**
 * Details
 */
export const networkDetails = (options: Options<NetworkDetailsData>) => { return (options?.client ?? client).get<NetworkDetailsResponse, NetworkDetailsError>({
    ...options,
    url: '/3/network/{network_id}'
}); };

/**
 * Alternative Names
 * Get the alternative names of a network.
 */
export const detailsCopy = (options: Options<DetailsCopyData>) => { return (options?.client ?? client).get<DetailsCopyResponse, DetailsCopyError>({
    ...options,
    url: '/3/network/{network_id}/alternative_names'
}); };

/**
 * Images
 * Get the TV network logos by id.
 */
export const alternativeNamesCopy = (options: Options<AlternativeNamesCopyData>) => { return (options?.client ?? client).get<AlternativeNamesCopyResponse, AlternativeNamesCopyError>({
    ...options,
    url: '/3/network/{network_id}/images'
}); };

/**
 * Details
 * Retrieve the details of a movie or TV show review.
 */
export const reviewDetails = (options: Options<ReviewDetailsData>) => { return (options?.client ?? client).get<ReviewDetailsResponse, ReviewDetailsError>({
    ...options,
    url: '/3/review/{review_id}'
}); };

/**
 * Validate Key
 * Test your API Key to see if it's valid.
 */
export const authenticationValidateKey = (options?: Options) => { return (options?.client ?? client).get<AuthenticationValidateKeyResponse, AuthenticationValidateKeyError>({
    ...options,
    url: '/3/authentication'
}); };

/**
 * Watch Providers
 * Get the list of streaming providers we have for a TV season.
 */
export const tvSeasonWatchProviders = (options: Options<TvSeasonWatchProvidersData>) => { return (options?.client ?? client).get<TvSeasonWatchProvidersResponse, TvSeasonWatchProvidersError>({
    ...options,
    url: '/3/tv/{series_id}/season/{season_number}/watch/providers'
}); };

/**
 * Countries
 * Get the list of countries (ISO 3166-1 tags) used throughout TMDB.
 */
export const configurationCountries = (options?: Options<ConfigurationCountriesData>) => { return (options?.client ?? client).get<ConfigurationCountriesResponse, ConfigurationCountriesError>({
    ...options,
    url: '/3/configuration/countries'
}); };

/**
 * Jobs
 * Get the list of the jobs and departments we use on TMDB.
 */
export const configurationJobs = (options?: Options) => { return (options?.client ?? client).get<ConfigurationJobsResponse, ConfigurationJobsError>({
    ...options,
    url: '/3/configuration/jobs'
}); };

/**
 * Languages
 * Get the list of languages (ISO 639-1 tags) used throughout TMDB.
 */
export const configurationLanguages = (options?: Options) => { return (options?.client ?? client).get<ConfigurationLanguagesResponse, ConfigurationLanguagesError>({
    ...options,
    url: '/3/configuration/languages'
}); };

/**
 * Primary Translations
 * Get a list of the officially supported translations on TMDB.
 */
export const configurationPrimaryTranslations = (options?: Options) => { return (options?.client ?? client).get<ConfigurationPrimaryTranslationsResponse, ConfigurationPrimaryTranslationsError>({
    ...options,
    url: '/3/configuration/primary_translations'
}); };

/**
 * Timezones
 * Get the list of timezones used throughout TMDB.
 */
export const configurationTimezones = (options?: Options) => { return (options?.client ?? client).get<ConfigurationTimezonesResponse, ConfigurationTimezonesError>({
    ...options,
    url: '/3/configuration/timezones'
}); };

/**
 * Create Session (with login)
 * This method allows an application to validate a request token by entering a username and password.
 */
export const authenticationCreateSessionFromLogin = (options?: Options<AuthenticationCreateSessionFromLoginData>) => { return (options?.client ?? client).post<AuthenticationCreateSessionFromLoginResponse, AuthenticationCreateSessionFromLoginError>({
    ...options,
    url: '/3/authentication/token/validate_with_login'
}); };

/**
 * Latest
 * Get the newest created person. This is a live response and will continuously change.
 */
export const personLatestId = (options?: Options) => { return (options?.client ?? client).get<PersonLatestIdResponse, PersonLatestIdError>({
    ...options,
    url: '/3/person/latest'
}); };

/**
 * Changes
 * Get the recent changes for a TV episode.
 */
export const tvEpisodeChangesById = (options: Options<TvEpisodeChangesByIdData>) => { return (options?.client ?? client).get<TvEpisodeChangesByIdResponse, TvEpisodeChangesByIdError>({
    ...options,
    url: '/3/tv/episode/{episode_id}/changes'
}); };

/**
 * Details
 * Get the details of a TV episode group.
 */
export const tvEpisodeGroupDetails = (options: Options<TvEpisodeGroupDetailsData>) => { return (options?.client ?? client).get<TvEpisodeGroupDetailsResponse, TvEpisodeGroupDetailsError>({
    ...options,
    url: '/3/tv/episode_group/{tv_episode_group_id}'
}); };

/**
 * Company
 * Search for companies by their original and alternative names.
 */
export const searchCompany = (options: Options<SearchCompanyData>) => { return (options?.client ?? client).get<SearchCompanyResponse, SearchCompanyError>({
    ...options,
    url: '/3/search/company'
}); };

/**
 * Collection
 * Search for collections by their original, translated and alternative names.
 */
export const searchCollection = (options: Options<SearchCollectionData>) => { return (options?.client ?? client).get<SearchCollectionResponse, SearchCollectionError>({
    ...options,
    url: '/3/search/collection'
}); };

/**
 * Keyword
 * Search for keywords by their name.
 */
export const searchKeyword = (options: Options<SearchKeywordData>) => { return (options?.client ?? client).get<SearchKeywordResponse, SearchKeywordError>({
    ...options,
    url: '/3/search/keyword'
}); };

/**
 * Lists
 * Get the lists that a TV series has been added to.
 */
export const listsCopy = (options: Options<ListsCopyData>) => { return (options?.client ?? client).get<ListsCopyResponse, ListsCopyError>({
    ...options,
    url: '/3/tv/{series_id}/lists'
}); };